<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>동적폼(ajax, axios, fetch)</title>

    <!-- jQuery CDN -->
    <script
      src="https://code.jquery.com/jquery-3.7.1.min.js"
      integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
      crossorigin="anonymous"
    ></script>
    <!-- axios CDN -->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <style>
        .result{
            font-size: 24px;
            font-weight: 700;
        }
    </style>
  </head>
  <body>
    <h1>동적폼 전송 연습하기!</h1>
    <form name="register">
      <label for="name">이름:</label>
      <input type="text" name="name" id="name" required />

      <br />
      <span>성별</span>
      <input type="radio" id="male" name="gender"  value="남성" required/>
      <label for="male">남자</label>

      <input type="radio" id="female" name="gender" value="여성"/>
      <label for="female">여자</label>

      <br /><br />
      <button type="button" onclick="ajaxGet()">Ajax GET 제출</button>
      <button type="button" onclick="ajaxPost()">Ajax POST 제출</button>


      <br /><br />
      <button type="button" onclick="axiosGet()">Axios GET 제출</button>
      <button type="button" onclick="axiosPost()">Axios POST 제출</button>

      <br /><br />
      <button type="button" onclick="fetchGet()">fetch GET 제출</button>
      <button type="button" onclick="fetchPost()">fetch POST 제출</button>
    </form>
    <div class="result"></div>

    <hr>
    <a href="/api">외부 API 사용</a>

    <hr/>
    <h4><a href="/practice01">실습문제1</a></h4>
    <h4><a href="/practice02">실습문제2</a></h4>
    <script>
        const resultBox = document.querySelector(".result");
        function ajaxGet(){
            // 폼 선택(form의 이름이 resgister)
            const form = document.forms["register"]; 

            // console.log(form);
            // console.log(form.name);
            // console.log(form.gender);
            // 유효성 검증 따로 해주기
            if (form.name.value.trim() === ""){
                alert("이름을 입력해주세요.");
                return;
            }
            if (form.gender.value.trim() === ""){
                alert("성별을 입력해주세요.");
                return;
            }

            // ---- ajax 요청 ----
            // 보낼 데이터 객체형태로 만들기
            const data = {
                name : form.name.value, // "이름"
                gender : form.gender.value, // "여성", "남성"
            };

            /* ajax 사용 */
            $.ajax({
                type: 'get', // 어떤 메소드로 보낼건지? (get, post, put, delete, ..)
                url: '/ajax', // form의 action에 해당하는 곳
                data: data, // 서버로 넘겨줄 데이터

                // 통신이 성공했을 때
                success : function(res){
                    // 통신 이후에 일어날 일들..
                    console.log(res);
                    resultBox.textContent = `GET /ajax 요청 완료! ${res.name}의 성별은 ${res.gender}`
                },

                // 통신이 실패했을 때
                error : function(err){
                    console.log("err", err);
                }
            });

        }
        function ajaxPost(){
            const form = document.forms["register"];
            const data = {
                name: form.name.value,
                gender: form.gender.value,
            };

            $.ajax({
                type: "post",
                url: "/ajax",
                data : data,
                success: function(data){
                    console.log(data);
                    resultBox.textContent = `POST /ajax 요청 완료!
                    ${data.name}의 성별은 ${data.gender}`;  
                },
                error:function(error){
                    console.log(error);
                },
            });
        }

        async function axiosGet() {
            const form = document.forms['register'];
            const data = {
                name: form.name.value,
                gender: form.gender.value,
            };

            // 유효성 검사 - checkValidity()
            // required가 있으면 기입이 되었는지 안되었는지 검사해줌
            /*
            - required 속성이 없는 항목 > 무조건 true 반환
            - required 속성이 있는 항목 > 
                - 기입을 했다면 true
                - 기입을 하지 않았다면 false
            */
           console.log(form.name.checkValidity()); // input[name="name"]
           console.log(form.gender[0].checkValidity()); // input[name="gender"]

           if(!form.name.checkValidity()) {
                resultBox.innerText = form.name.validationMessage;
                return;
           }
           if(!form.gender[0].checkValidity()){
                resultBox.innerText = form.gender[0].validationMessage;
                return;
           }
           /*
           // ---- axios 요청 보내기 ----
           axios({
                method: "get",
                url: '/axios',
                params: data, // get 요청일 때는 params에 담아서 요청
           }).then(function(response){
                // 통신에 성공했을 때
                console.log('------------');
                console.log(response);
                console.log(response.data);
                console.log(response.status);
                console.log(response.headers);
                console.log(response.config);
                console.log(response.statusText);
                // {name: 'soojin', gender:'여성'} 이렇게 주지 않는다.!
                resultBox.textContent=`GET /axios 요청 완료!
                ${response.data.name}의 성별은 ${response.data.gender}`;
                resultBox.style.color = "green";

           }).catch(function(err){
                // 통신에 실패했을 때
                console.log("error!!!!!!!!!!!!!!!!!!!")
                console.log(err);
           });
        */
           // 2. async ~ await
           // 에러처리를 try ~ catch 문을 사용해서 해주는게 좋다!
           try{
                const response = await axios({
                    method: 'get',
                    url: `/axios?name=${data.name}&gender=${data.gender}`,
            });
            console.log(response);
            console.log(response.data);
            const { name, gender } = response.data;
            resultBox.textContent = `${name}의 성별은 ${gender}`;
            resultBox.style.color = "green";
           } catch(err){
            console.error(err);
           }   
        }
        async function axiosPost() {
            const form = document.forms["register"];
            const data = {
                name: form.name.value,
                gender: form.gender.value,
            };

            try{
                const res = await axios({
                    method: 'post',
                    url: '/axios',
                    data: data,
                });
                console.log(res);
                // res에 바로 접근하는 것이 아닌 res.data로 접근해야한다.
                console.log("실제 데이터", res.data);
                const {name : 이름, gender : 성} = res.data;
                resultBox.textContent = `POST /axios 요청 완료!
                ${이름}의 성별은 ${성}입니다.`;
                resultBox.style.color = "pink";
            }catch(err){
                console.error(err);
            }
        }

        function fetchGet() {
            const form = document.forms["register"];
            const data = {
                name: form.name.value,
                gender: form.gender.value,
            };

            //fetch('/fetch', {
            //    method: "get",
            //});
            fetch(`/fetch?name=${data.name}&gender=${data.gender}`).then(
                (response)=>{
                    console.log(response);
                    // 서버에서 넘어온 문자열을 뽑아내기 위해 text() 메소드 사용
                    // text() : response 객체에서 텍스트 본문을 뽑아내기 위해 사용
                    // return response.text();

                    // json(): response 객체에서 오브젝트 본문을 뽑아내기 위해 사용
                    return response.json();
                }).then((res)=>{
                    console.log(res);
                    resultBox.textContent = `GET /fetch 요청 완료!! ${res.name}의 성별은 ${res.gender}`;
                    resultBox.style.color = "purple";
                })
                .catch((err)=>{
                console.error("err", err);
            });
        }

        async function fetchPost(){
            const form = document.forms["register"];
            const data = {
                name: form.name.value,
                gender: form.gender.value,
            };

            try{
                const res = await fetch('/fetch', {
                    method: 'post',
                    body: JSON.stringify(data), // JSON 형식으로 보내야 함 (JSON은 문자열이다.)
                    headers: {
                        "Content-Type" : "application/json",
                    },
                });
                console.log(res);
                // json(), text() >> 시간이 걸리는 작업
                const result = await res.json();
                console.log(result);
                // { name: '', gender: '' }
                const {name, gender} = result;
                resultBox.textContent = `POST /fetch 요청 결과 : ${name}의 성별은 ${gender}`;
                resultBox.style.color = "red";
            }catch(err){
                console.error(err);
            }
        };
    </script>
  </body>
</html>